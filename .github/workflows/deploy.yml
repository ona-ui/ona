name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: VPS-ONA

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rolling Deploy to VPS
        uses: appleboy/ssh-action@v1.2.2
        with:
          host:     ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key:      ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            
            echo "🚀 Début du déploiement rolling..."
            
            cd /var/www/ona
            
            # Récupérer les dernières modifications
            echo "📥 Récupération des modifications..."
            sudo git pull origin main
            
            # Fonction pour attendre qu'un service soit healthy
            wait_for_healthy() {
              local service=$1
              local max_attempts=12
              local attempt=1
              
              echo "⏳ Attente que $service soit healthy..."
              
              while [ $attempt -le $max_attempts ]; do
              health_status=$(sudo docker inspect --format='{{.State.Health.Status}}' $(sudo docker compose ps -q $service) 2>/dev/null || echo "starting")
                
                if [ "$health_status" = "healthy" ]; then
                  echo "✅ $service est healthy (tentative $attempt/$max_attempts)"
                  return 0
                elif [ "$health_status" = "unhealthy" ]; then
                  echo "❌ $service est unhealthy"
                  return 1
                fi
                
                echo "🔄 Tentative $attempt/$max_attempts - $service: $health_status"
                sleep 15
                attempt=$((attempt + 1))
              done
              
              echo "❌ $service n'est pas healthy après $max_attempts tentatives"
              sudo docker compose logs --tail=10 $service
              return 1
            }
            
            # Fonction pour déployer un service avec rolling update
            deploy_service() {
              local service=$1
              echo "🔧 Déploiement rolling de $service..."
              
              # Construire la nouvelle image
              echo "🏗️ Construction de la nouvelle image $service..."
              sudo docker compose build --no-cache $service
              
              # Créer un nouveau conteneur temporaire
              echo "🚀 Démarrage du nouveau $service..."
              sudo docker compose up -d --no-deps --scale $service=2 $service
              
              # Attendre que le nouveau service soit healthy
              echo "⏳ Attente que le nouveau $service soit prêt..."
              sleep 30
              
              if ! wait_for_healthy "$service"; then
                echo "❌ Rollback de $service..."
                sudo docker compose up -d --no-deps --scale $service=1 $service
                return 1
              fi
              
              # Remplacer l'ancien conteneur
              echo "🔄 Remplacement de l'ancien $service..."
              sudo docker compose up -d --no-deps --scale $service=1 $service
              
              # Vérification finale
              sleep 10
              if ! wait_for_healthy "$service"; then
                echo "❌ Le $service n'est pas stable après remplacement"
                return 1
              fi
              
              echo "✅ $service déployé avec succès"
              return 0
            }
            
            # Déploiement du backend
            if ! deploy_service "backend"; then
              echo "❌ Échec du déploiement du backend"
              exit 1
            fi
            
            # Attendre avant le frontend
            sleep 15
            
            # Déploiement du frontend
            if ! deploy_service "frontend"; then
              echo "❌ Échec du déploiement du frontend"
              exit 1
            fi
            
            # Nettoyage
            echo "🧹 Nettoyage des images inutilisées..."
            sudo docker system prune -f
            
            # Statut final
            echo "📊 Statut final des services:"
            sudo docker compose ps
            
            echo "🎉 Déploiement rolling terminé avec succès !"
